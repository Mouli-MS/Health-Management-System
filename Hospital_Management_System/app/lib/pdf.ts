import PDFDocument from 'pdfkit';
import { Readable } from 'stream';

interface BillData {
  id: number;
  patient: {
    firstName: string;
    lastName: string;
    phone: string;
    email: string | null;
    address: string | null;
  };
  amount: number;
  status: string;
  createdAt: string;
}

export async function generateBillPDF(bill: BillData): Promise<Buffer> {
  return new Promise((resolve, reject) => {
    const doc = new PDFDocument();
    const chunks: Buffer[] = [];

    doc.on('data', (chunk) => chunks.push(chunk));
    doc.on('end', () => resolve(Buffer.concat(chunks)));
    doc.on('error', reject);

    // Header
    doc.fontSize(20).text('Hospital Bill', 50, 50);
    doc.fontSize(12).text(`Bill ID: ${bill.id}`, 50, 80);
    doc.text(`Date: ${new Date(bill.createdAt).toLocaleDateString()}`, 50, 95);

    // Patient Info
    doc.text('Patient Information:', 50, 120);
    doc.text(`Name: ${bill.patient.firstName} ${bill.patient.lastName}`, 50, 140);
    doc.text(`Phone: ${bill.patient.phone}`, 50, 155);
    if (bill.patient.email) doc.text(`Email: ${bill.patient.email}`, 50, 170);
    if (bill.patient.address) doc.text(`Address: ${bill.patient.address}`, 50, 185);

    // Bill Details
    doc.text('Bill Details:', 50, 220);
    doc.text(`Amount: $${bill.amount.toFixed(2)}`, 50, 240);
    doc.text(`Status: ${bill.status}`, 50, 255);

    // Footer
    doc.text('Thank you for choosing our hospital.', 50, 300);
    doc.text('This is a computer-generated bill.', 50, 315);

    doc.end();
  });
}

interface ReportData {
  id: number;
  patient: {
    firstName: string;
    lastName: string;
  };
  reportType: string;
  reportDate: string;
  content?: string;
}

export async function generateReportPDF(reportData: ReportData): Promise<Buffer> {
  return new Promise((resolve, reject) => {
    const doc = new PDFDocument();
    const chunks: Buffer[] = [];

    doc.on('data', (chunk) => chunks.push(chunk));
    doc.on('end', () => resolve(Buffer.concat(chunks)));
    doc.on('error', reject);

    // Header
    doc.fontSize(20).text('Lab Report', 50, 50);
    doc.fontSize(12).text(`Report ID: ${reportData.id}`, 50, 80);
    doc.text(`Date: ${new Date(reportData.reportDate).toLocaleDateString()}`, 50, 95);

    // Patient Info
    doc.text('Patient Information:', 50, 120);
    doc.text(`Name: ${reportData.patient.firstName} ${reportData.patient.lastName}`, 50, 140);
    doc.text(`Report Type: ${reportData.reportType}`, 50, 155);

    // Report Content
    doc.text('Report Details:', 50, 190);
    doc.text(reportData.content || 'Standard lab report content.', 50, 210);

    // Footer
    doc.text('Lab Report Generated by HMS.', 50, 250);

    doc.end();
  });
}
